# Идея
Система отслеживания событий нужна для того, чтобы у инженеров была возможность
сохранять данные о поведения пользователей и системы, передавать собранные данные
команде аналитиков для последующего обработки (разворачивания в аналитическую базу)
и анализа данных.

Примеры событий, которые могут отслеживаться:
- человек просмотрел определенный товар,
- человек просмотрел определенную категорию,
- человек добавил товар в корзину,
- человек удалил товар из корзины,
- оплата заказа,
- использование поиска по товарам,
- использование стандартных фильтров при поиске.

# Набор таблиц для работы гипотетического магазина
* products: простая таблица товаров с обязательным названием, ценой и категорией,
* categories: названия категорий,
* users: зарегистрированные покупатели (пользователи) со статусом (для подтверждения по почте),
* orders - таблица заказов с пользователем и статусом заказа,
* order_products - товары из соответствующего заказа с количеством и суммой.

# таблицы данных для отслеживания событий
* visitors: таблица уникальных посетителей (т.е. устройств),
            в которую мы будем записывать все новые устройства,
            генерируюя для них уникальный UUID (удобно для сохранения в куки).
* session:  такая же таблица, только тут будет хранить сансы посещений,
            для которых должен быть обязательно определен посетитель и,
            возможно, будет определен пользователь (если зарегистрируется).

* tags:     любому отслеживаемому событию можно будет назначить метку,
            которые для удобства будут вложенными (для чего используем
            связь parent_id -> id таблицы на себя саму)
* event_tags: необходимо для присвоения более одной метки событию

# основные таблицы для отслеживания событий
* events:      главная таблица событий, которая будет собирать аналитику,
               какое событие/сессия/метки/время и значение,
               поле value будет иметь тип bigint, предполагая, что мы будем
               сохранять в нем только целые числа; в случае необходимости,
               десятичное число можно просто домножить на 10^n чтобы привести
               его к целому (например, деньги хранить в копейках).
* event_types: будем хранить "человеческие" названия событий в отдельной таблице,
               чтобы не занимать много места в основной.

# связывание события с контекстом (таблица context)
Поскольку события могут быть связаны с определенным объектом (например, пользователь просмотрел товар),
нам необходимо иметь возможность привязать идентификаторы различных объектов к событию.
Для этого воспользуемся универсальной таблицей context, в которой будет определен тип
объекта и его идентификатор.
